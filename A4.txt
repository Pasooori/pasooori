4th linear regression-

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv("Boston.csv")
df

df.head()

df.info()

df.isna().sum()

target_features = "medv"

y = df[target_features]

x = df.drop(target_features, axis=1)

x.head()

y.head()

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.2,random_state=2)

from sklearn.linear_model import LinearRegression
regression = LinearRegression()

regression.fit(x_train,y_train)

train_score=round(regression.score(x_train,y_train)*100,2)
print('Train score of linear regression',train_score)

y_pred = regression.predict(x_test)


from sklearn.metrics import r2_score
score=round(r2_score(y_test,y_pred)*100,2)
print('r_2 score',score)

round(regression.score(x_test,y_test)*100,2)

from sklearn import metrics
print("mean absolute error on test data of linear regression",metrics.mean_absolute_error(y_test,y_pred))
print("mean squared error on test data of linear regression",metrics.mean_squared_error(y_test,y_pred))
print("root mean squared error on test data of linear regression",np.sqrt(metrics.mean_squared_error(y_test,y_pred)))

df1=pd.DataFrame({'Actual':y_test,'Predicted':y_pred,'Variance':y_test-y_pred})
df1.head()

df.head(14)































